{"map":"{\"version\":3,\"sources\":[\"/home/gopal/PycharmProjects/Weetwood_react/frontend/src/IciclePlot.js\",\"/home/gopal/PycharmProjects/Weetwood_react/frontend/src/BarChart.js\",\"/home/gopal/PycharmProjects/Weetwood_react/frontend/src/LineChart.js\",\"/home/gopal/PycharmProjects/Weetwood_react/frontend/src/App.js\",\"/home/gopal/PycharmProjects/Weetwood_react/frontend/src/reportWebVitals.js\",\"/home/gopal/PycharmProjects/Weetwood_react/frontend/src/index.js\"],\"names\":[\"IciclePlot\",\"_ref\",\"data\",\"ref\",\"useRef\",\"width\",\"height\",\"size\",\"setSize\",\"useState\",\"useEffect\",\"handleResize\",\"current\",\"getBoundingClientRect\",\"window\",\"addEventListener\",\"removeEventListener\",\"useResizeObserver\",\"color\",\"d3\",\"root\",\"sum\",\"d\",\"value\",\"sort\",\"a\",\"b\",\"partition\",\"svg\",\"attr\",\"selectAll\",\"remove\",\"tooltip\",\"append\",\"style\",\"descendants\",\"enter\",\"x0\",\"y0\",\"x1\",\"y1\",\"children\",\"parent\",\"name\",\"on\",\"event\",\"text\",\"concat\",\"pageY\",\"pageX\",\"React\",\"createElement\",\"BarChart\",\"LineChart\",\"App\",\"setData\",\"activeTab\",\"setActiveTab\",\"plots\",\"setPlots\",\"axios\",\"get\",\"then\",\"response\",\"fetchedData\",\"catch\",\"error\",\"console\",\"className\",\"onClick\",\"renderTabContent\",\"map\",\"plotData\",\"index\",\"key\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"e\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"// src/IciclePlot.js\\nimport React, { useEffect, useRef, useState } from 'react';\\nimport * as d3 from 'd3';\\n\\n// Helper hook to get the size of the container\\nconst useResizeObserver = (ref) => {\\n  const [size, setSize] = useState({ width: 0, height: 0 });\\n\\n  useEffect(() => {\\n    const handleResize = () => {\\n      if (ref.current) {\\n        const { width, height } = ref.current.getBoundingClientRect();\\n        setSize({ width, height });\\n      }\\n    };\\n\\n    handleResize(); // Initial call\\n\\n    window.addEventListener('resize', handleResize);\\n    return () => window.removeEventListener('resize', handleResize);\\n  }, [ref]);\\n\\n  return size;\\n};\\n\\nconst IciclePlot = ({ data }) => {\\n  const ref = useRef();\\n  const { width, height } = useResizeObserver(ref);\\n\\n  useEffect(() => {\\n    if (!width || !height) return; // Don't render until dimensions are available\\n\\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\\n\\n    const partition = (data) => {\\n      const root = d3.hierarchy(data)\\n        .sum((d) => d.value)\\n        .sort((a, b) => b.value - a.value);\\n      return d3.partition()\\n        .size([width, height])(root);\\n    };\\n\\n    const root = partition(data);\\n\\n    const svg = d3.select(ref.current)\\n      .attr('width', width)\\n      .attr('height', height);\\n\\n    svg.selectAll(\\\"*\\\").remove(); // Clear previous contents if any\\n\\n    const tooltip = d3.select(\\\"body\\\").append(\\\"div\\\")\\n      .attr(\\\"class\\\", \\\"tooltip\\\")\\n      .style(\\\"position\\\", \\\"absolute\\\")\\n      .style(\\\"visibility\\\", \\\"hidden\\\")\\n      .style(\\\"background-color\\\", \\\"white\\\")\\n      .style(\\\"border\\\", \\\"1px solid #ccc\\\")\\n      .style(\\\"padding\\\", \\\"5px\\\")\\n      .style(\\\"border-radius\\\", \\\"3px\\\")\\n      .style(\\\"box-shadow\\\", \\\"0 0 10px rgba(0,0,0,0.5)\\\");\\n\\n    svg.selectAll(\\\"rect\\\")\\n      .data(root.descendants())\\n      .enter().append(\\\"rect\\\")\\n      .attr(\\\"class\\\", \\\"node\\\")\\n      .attr(\\\"x\\\", (d) => d.x0)\\n      .attr(\\\"y\\\", (d) => d.y0)\\n      .attr(\\\"width\\\", (d) => d.x1 - d.x0)\\n      .attr(\\\"height\\\", (d) => d.y1 - d.y0)\\n      .attr(\\\"fill\\\", (d) => color((d.children ? d : d.parent).data.name))\\n      .style(\\\"stroke\\\", \\\"#fff\\\")\\n      .on(\\\"mouseover\\\", function (event, d) {\\n        tooltip.style(\\\"visibility\\\", \\\"visible\\\")\\n          .text(`${d.data.name}: ${d.value}`);\\n      })\\n      .on(\\\"mousemove\\\", function (event) {\\n        tooltip.style(\\\"top\\\", (event.pageY - 10) + \\\"px\\\")\\n          .style(\\\"left\\\", (event.pageX + 10) + \\\"px\\\");\\n      })\\n      .on(\\\"mouseout\\\", function () {\\n        tooltip.style(\\\"visibility\\\", \\\"hidden\\\");\\n      });\\n\\n    svg.selectAll(\\\"text\\\")\\n      .data(root.descendants())\\n      .enter().append(\\\"text\\\")\\n      .attr(\\\"class\\\", \\\"label\\\")\\n      .attr(\\\"x\\\", (d) => d.x0 + 4)\\n      .attr(\\\"y\\\", (d) => (d.y0 + d.y1) / 2)\\n      .text((d) => d.data.name)\\n      .style(\\\"fill\\\", \\\"#fff\\\")\\n      .style(\\\"font\\\", \\\"10px sans-serif\\\")\\n      .style(\\\"text-anchor\\\", \\\"start\\\")\\n      .style(\\\"dominant-baseline\\\", \\\"middle\\\");\\n\\n  }, [data, width, height]);\\n\\n  return (\\n    <svg ref={ref} style={{ width: '100%', height: '100%' }}></svg>\\n  );\\n};\\n\\nexport default IciclePlot;\\n\",\"// src/BarChart.js\\nimport React from 'react';\\n\\nconst BarChart = () => {\\n  return (\\n    <div>\\n      <h2>Bar Chart Placeholder</h2>\\n      {/* Insert your BarChart visualization here */}\\n    </div>\\n  );\\n};\\n\\nexport default BarChart;\\n\",\"// src/LineChart.js\\nimport React from 'react';\\n\\nconst LineChart = () => {\\n  return (\\n    <div>\\n      <h2>Line Chart Placeholder</h2>\\n      {/* Insert your LineChart visualization here */}\\n    </div>\\n  );\\n};\\n\\nexport default LineChart;\\n\",\"// src/App.js\\nimport React, { useState, useEffect } from 'react';\\nimport axios from 'axios';\\nimport IciclePlot from './IciclePlot';\\nimport BarChart from './BarChart';\\nimport LineChart from './LineChart';\\n\\nconst App = () => {\\n  const [data, setData] = useState(null);\\n  const [activeTab, setActiveTab] = useState('icicle');\\n  const [plots, setPlots] = useState([data, data]); // Example: Two plots\\n\\n  useEffect(() => {\\n    axios.get('http://127.0.0.1:5000/data')\\n      .then(response => {\\n        const fetchedData = response.data;\\n        setData(fetchedData);\\n        setPlots([fetchedData, fetchedData]); // Set two plots with the fetched data\\n      })\\n      .catch(error => {\\n        console.error('Error fetching data:', error);\\n      });\\n  }, []);\\n\\n  const renderTabContent = () => {\\n    switch (activeTab) {\\n      case 'icicle':\\n        return (\\n          <div className=\\\"icicle-plots-container\\\">\\n            {plots.map((plotData, index) => (\\n              <div key={index} className=\\\"icicle-plot-container\\\">\\n                <IciclePlot data={plotData} />\\n              </div>\\n            ))}\\n          </div>\\n        );\\n      case 'bar':\\n        return <BarChart />;\\n      case 'line':\\n        return <LineChart />;\\n      default:\\n        return <p>Select a tab</p>;\\n    }\\n  };\\n\\n  return (\\n    <div>\\n      <h1>Visualization Tabs</h1>\\n      <div className=\\\"tabs\\\">\\n        <button onClick={() => setActiveTab('icicle')}>Icicle Plots</button>\\n        <button onClick={() => setActiveTab('bar')}>Bar Chart</button>\\n        <button onClick={() => setActiveTab('line')}>Line Chart</button>\\n      </div>\\n      <div className=\\\"tab-content\\\">\\n        {renderTabContent()}\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{108:function(e,t,a){e.exports=a(122)},117:function(e,t,a){},122:function(e,t,a){\"use strict\";a.r(t);var n=a(2),l=a.n(n),r=a(48),c=a.n(r),i=(a(117),a(124)),s=a(4);var o=e=>{let{data:t}=e;const a=Object(n.useRef)(),{width:r,height:c}=(e=>{const[t,a]=Object(n.useState)({width:0,height:0});return Object(n.useEffect)(()=>{const t=()=>{if(e.current){const{width:t,height:n}=e.current.getBoundingClientRect();a({width:t,height:n})}};return t(),window.addEventListener(\"resize\",t),()=>window.removeEventListener(\"resize\",t)},[e]),t})(a);return Object(n.useEffect)(()=>{if(!r||!c)return;const e=s.c(s.d),n=(e=>{const t=s.a(e).sum(e=>e.value).sort((e,t)=>t.value-e.value);return s.b().size([r,c])(t)})(t),l=s.e(a.current).attr(\"width\",r).attr(\"height\",c);l.selectAll(\"*\").remove();const i=s.e(\"body\").append(\"div\").attr(\"class\",\"tooltip\").style(\"position\",\"absolute\").style(\"visibility\",\"hidden\").style(\"background-color\",\"white\").style(\"border\",\"1px solid #ccc\").style(\"padding\",\"5px\").style(\"border-radius\",\"3px\").style(\"box-shadow\",\"0 0 10px rgba(0,0,0,0.5)\");l.selectAll(\"rect\").data(n.descendants()).enter().append(\"rect\").attr(\"class\",\"node\").attr(\"x\",e=>e.x0).attr(\"y\",e=>e.y0).attr(\"width\",e=>e.x1-e.x0).attr(\"height\",e=>e.y1-e.y0).attr(\"fill\",t=>e((t.children?t:t.parent).data.name)).style(\"stroke\",\"#fff\").on(\"mouseover\",function(e,t){i.style(\"visibility\",\"visible\").text(\"\".concat(t.data.name,\": \").concat(t.value))}).on(\"mousemove\",function(e){i.style(\"top\",e.pageY-10+\"px\").style(\"left\",e.pageX+10+\"px\")}).on(\"mouseout\",function(){i.style(\"visibility\",\"hidden\")}),l.selectAll(\"text\").data(n.descendants()).enter().append(\"text\").attr(\"class\",\"label\").attr(\"x\",e=>e.x0+4).attr(\"y\",e=>(e.y0+e.y1)/2).text(e=>e.data.name).style(\"fill\",\"#fff\").style(\"font\",\"10px sans-serif\").style(\"text-anchor\",\"start\").style(\"dominant-baseline\",\"middle\")},[t,r,c]),l.a.createElement(\"svg\",{ref:a,style:{width:\"100%\",height:\"100%\"}})};var d=()=>l.a.createElement(\"div\",null,l.a.createElement(\"h2\",null,\"Bar Chart Placeholder\"));var u=()=>l.a.createElement(\"div\",null,l.a.createElement(\"h2\",null,\"Line Chart Placeholder\"));var h=()=>{const[e,t]=Object(n.useState)(null),[a,r]=Object(n.useState)(\"icicle\"),[c,s]=Object(n.useState)([e,e]);Object(n.useEffect)(()=>{i.a.get(\"http://127.0.0.1:5000/data\").then(e=>{const a=e.data;t(a),s([a,a])}).catch(e=>{console.error(\"Error fetching data:\",e)})},[]);return l.a.createElement(\"div\",null,l.a.createElement(\"h1\",null,\"Visualization Tabs\"),l.a.createElement(\"div\",{className:\"tabs\"},l.a.createElement(\"button\",{onClick:()=>r(\"icicle\")},\"Icicle Plots\"),l.a.createElement(\"button\",{onClick:()=>r(\"bar\")},\"Bar Chart\"),l.a.createElement(\"button\",{onClick:()=>r(\"line\")},\"Line Chart\")),l.a.createElement(\"div\",{className:\"tab-content\"},(()=>{switch(a){case\"icicle\":return l.a.createElement(\"div\",{className:\"icicle-plots-container\"},c.map((e,t)=>l.a.createElement(\"div\",{key:t,className:\"icicle-plot-container\"},l.a.createElement(o,{data:e}))));case\"bar\":return l.a.createElement(d,null);case\"line\":return l.a.createElement(u,null);default:return l.a.createElement(\"p\",null,\"Select a tab\")}})()))};var m=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,125)).then(t=>{let{getCLS:a,getFID:n,getFCP:l,getLCP:r,getTTFB:c}=t;a(e),n(e),l(e),r(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(h,null))),m()}},[[108,1,2]]]);","extractedComments":[]}