{"version":3,"sources":["IciclePlot.js","BarChart.js","LineChart.js","App.js","reportWebVitals.js","index.js"],"names":["IciclePlot","_ref","data","ref","useRef","width","height","size","setSize","useState","useEffect","handleResize","current","getBoundingClientRect","window","addEventListener","removeEventListener","useResizeObserver","color","d3","root","sum","d","value","sort","a","b","partition","svg","attr","selectAll","remove","tooltip","append","style","descendants","enter","x0","y0","x1","y1","children","parent","name","on","event","text","concat","pageY","pageX","React","createElement","BarChart","LineChart","App","setData","activeTab","setActiveTab","plots","setPlots","axios","get","then","response","fetchedData","catch","error","console","className","onClick","renderTabContent","map","plotData","index","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8bc07dcc.chunk.js","sourcesContent":["// src/IciclePlot.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\n// Helper hook to get the size of the container\nconst useResizeObserver = (ref) => {\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (ref.current) {\n        const { width, height } = ref.current.getBoundingClientRect();\n        setSize({ width, height });\n      }\n    };\n\n    handleResize(); // Initial call\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [ref]);\n\n  return size;\n};\n\nconst IciclePlot = ({ data }) => {\n  const ref = useRef();\n  const { width, height } = useResizeObserver(ref);\n\n  useEffect(() => {\n    if (!width || !height) return; // Don't render until dimensions are available\n\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const partition = (data) => {\n      const root = d3.hierarchy(data)\n        .sum((d) => d.value)\n        .sort((a, b) => b.value - a.value);\n      return d3.partition()\n        .size([width, height])(root);\n    };\n\n    const root = partition(data);\n\n    const svg = d3.select(ref.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    svg.selectAll(\"*\").remove(); // Clear previous contents if any\n\n    const tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"1px solid #ccc\")\n      .style(\"padding\", \"5px\")\n      .style(\"border-radius\", \"3px\")\n      .style(\"box-shadow\", \"0 0 10px rgba(0,0,0,0.5)\");\n\n    svg.selectAll(\"rect\")\n      .data(root.descendants())\n      .enter().append(\"rect\")\n      .attr(\"class\", \"node\")\n      .attr(\"x\", (d) => d.x0)\n      .attr(\"y\", (d) => d.y0)\n      .attr(\"width\", (d) => d.x1 - d.x0)\n      .attr(\"height\", (d) => d.y1 - d.y0)\n      .attr(\"fill\", (d) => color((d.children ? d : d.parent).data.name))\n      .style(\"stroke\", \"#fff\")\n      .on(\"mouseover\", function (event, d) {\n        tooltip.style(\"visibility\", \"visible\")\n          .text(`${d.data.name}: ${d.value}`);\n      })\n      .on(\"mousemove\", function (event) {\n        tooltip.style(\"top\", (event.pageY - 10) + \"px\")\n          .style(\"left\", (event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n\n    svg.selectAll(\"text\")\n      .data(root.descendants())\n      .enter().append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", (d) => d.x0 + 4)\n      .attr(\"y\", (d) => (d.y0 + d.y1) / 2)\n      .text((d) => d.data.name)\n      .style(\"fill\", \"#fff\")\n      .style(\"font\", \"10px sans-serif\")\n      .style(\"text-anchor\", \"start\")\n      .style(\"dominant-baseline\", \"middle\");\n\n  }, [data, width, height]);\n\n  return (\n    <svg ref={ref} style={{ width: '100%', height: '100%' }}></svg>\n  );\n};\n\nexport default IciclePlot;\n","// src/BarChart.js\nimport React from 'react';\n\nconst BarChart = () => {\n  return (\n    <div>\n      <h2>Bar Chart Placeholder</h2>\n      {/* Insert your BarChart visualization here */}\n    </div>\n  );\n};\n\nexport default BarChart;\n","// src/LineChart.js\nimport React from 'react';\n\nconst LineChart = () => {\n  return (\n    <div>\n      <h2>Line Chart Placeholder</h2>\n      {/* Insert your LineChart visualization here */}\n    </div>\n  );\n};\n\nexport default LineChart;\n","// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport IciclePlot from './IciclePlot';\nimport BarChart from './BarChart';\nimport LineChart from './LineChart';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [activeTab, setActiveTab] = useState('icicle');\n  const [plots, setPlots] = useState([data, data]); // Example: Two plots\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/data')\n      .then(response => {\n        const fetchedData = response.data;\n        setData(fetchedData);\n        setPlots([fetchedData, fetchedData]); // Set two plots with the fetched data\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'icicle':\n        return (\n          <div className=\"icicle-plots-container\">\n            {plots.map((plotData, index) => (\n              <div key={index} className=\"icicle-plot-container\">\n                <IciclePlot data={plotData} />\n              </div>\n            ))}\n          </div>\n        );\n      case 'bar':\n        return <BarChart />;\n      case 'line':\n        return <LineChart />;\n      default:\n        return <p>Select a tab</p>;\n    }\n  };\n\n  return (\n    <div>\n      <h1>Visualization Tabs</h1>\n      <div className=\"tabs\">\n        <button onClick={() => setActiveTab('icicle')}>Icicle Plots</button>\n        <button onClick={() => setActiveTab('bar')}>Bar Chart</button>\n        <button onClick={() => setActiveTab('line')}>Line Chart</button>\n      </div>\n      <div className=\"tab-content\">\n        {renderTabContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}